#include "oneflow/core/framework/op_generated.h"

namespace oneflow {

/* static */ Maybe<void> SspVariableProxyOp::InferLogicalTensorDesc(user_op::InferContext *ctx) {
      const Shape& var_shape = ctx->InputShape("var", 0);
      *ctx->OutputShape("ref", 0) = var_shape;
      *ctx->OutputShape("value", 0) = var_shape;
      return Maybe<void>::Ok();
    }

/*static*/ Maybe<void> SspVariableProxyOp::InferPhysicalTensorDesc(user_op::InferContext* ctx) {return InferLogicalTensorDesc(ctx);}

/* static */ Maybe<void> SspVariableProxyOp::GetSbp(user_op::SbpContext *ctx) {
      const auto& var_tensor = ctx->LogicalTensorDesc4InputArgNameAndIndex("var", 0);
      FOR_RANGE(int64_t, i, 0, var_tensor.shape().NumAxes()) {
        ctx->NewBuilder()
            .Split(user_op::OpArg("var", 0), i)
            .Split(user_op::OpArg("ref", 0), i)
            .Split(user_op::OpArg("value", 0), i)
            .Build();
      }
      return Maybe<void>::Ok();
    }

/* static */ "Maybe<void>" SspVariableProxyOp::ModifyOutputArg(GetOutputArgModifier GetOutputArgModifierFn, const user_op::UserOpConfWrapper &conf) {
      user_op::OutputArgModifier* out_modifier = GetOutputArgModifierFn("ref", 0);
      CHECK_OR_RETURN(out_modifier != nullptr);
      out_modifier->set_is_mutable(true);
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> SspVariableProxyOp::InferDataType(user_op::InferContext *ctx) {
      *ctx->OutputDType("ref", 0) = ctx->InputDType("var", 0);
      *ctx->OutputDType("value", 0) = ctx->InputDType("var", 0);
      return Maybe<void>::Ok();
    }

