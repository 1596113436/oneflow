#include "oneflow/core/framework/op_generated.h"

namespace oneflow {

/* static */ Maybe<void> ScalarAddByTensorOp::InferLogicalTensorDesc(user_op::InferContext *ctx) {
return TensorDescInferFn(ctx);
}

/*static*/ Maybe<void> ScalarAddByTensorOp::InferPhysicalTensorDesc(user_op::InferContext* ctx) {return InferLogicalTensorDesc(ctx);}

/* static */ Maybe<void> ScalarAddByTensorOp::GetSbp(user_op::SbpContext *ctx) {
      ctx->NewBuilder()
          .PartialSum(user_op::OpArg("x", 0))
          .PartialSum(user_op::OpArg("scalar", 0))
          .PartialSum(user_op::OpArg("y", 0))
          .Build();
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> ScalarAddByTensorOp::InferDataType(user_op::InferContext *ctx) {
return DataTypeInferFn(ctx);
}

/* static */ Maybe<void> ScalarSubByTensorOp::InferLogicalTensorDesc(user_op::InferContext *ctx) {
return TensorDescInferFn(ctx);
}

/*static*/ Maybe<void> ScalarSubByTensorOp::InferPhysicalTensorDesc(user_op::InferContext* ctx) {return InferLogicalTensorDesc(ctx);}

/* static */ Maybe<void> ScalarSubByTensorOp::GetSbp(user_op::SbpContext *ctx) {
      ctx->NewBuilder()
          .PartialSum(user_op::OpArg("x", 0))
          .PartialSum(user_op::OpArg("scalar", 0))
          .PartialSum(user_op::OpArg("y", 0))
          .Build();
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> ScalarSubByTensorOp::InferDataType(user_op::InferContext *ctx) {
return DataTypeInferFn(ctx);
}

/* static */ Maybe<void> ScalarMulByTensorOp::InferLogicalTensorDesc(user_op::InferContext *ctx) {
return TensorDescInferFn(ctx);
}

/*static*/ Maybe<void> ScalarMulByTensorOp::InferPhysicalTensorDesc(user_op::InferContext* ctx) {return InferLogicalTensorDesc(ctx);}

/* static */ Maybe<void> ScalarMulByTensorOp::GetSbp(user_op::SbpContext *ctx) {
      ctx->NewBuilder()
          .PartialSum(user_op::OpArg("x", 0))
          .Broadcast(user_op::OpArg("scalar", 0))
          .PartialSum(user_op::OpArg("y", 0))
          .Build();
      ctx->NewBuilder()
          .Broadcast(user_op::OpArg("x", 0))
          .PartialSum(user_op::OpArg("scalar", 0))
          .PartialSum(user_op::OpArg("y", 0))
          .Build();
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> ScalarMulByTensorOp::InferDataType(user_op::InferContext *ctx) {
return DataTypeInferFn(ctx);
}

/* static */ Maybe<void> ScalarDivByTensorOp::InferLogicalTensorDesc(user_op::InferContext *ctx) {
return TensorDescInferFn(ctx);
}

/*static*/ Maybe<void> ScalarDivByTensorOp::InferPhysicalTensorDesc(user_op::InferContext* ctx) {return InferLogicalTensorDesc(ctx);}

/* static */ Maybe<void> ScalarDivByTensorOp::GetSbp(user_op::SbpContext *ctx) {
      ctx->NewBuilder()
          .PartialSum(user_op::OpArg("x", 0))
          .Broadcast(user_op::OpArg("scalar", 0))
          .PartialSum(user_op::OpArg("y", 0))
          .Build();
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> ScalarDivByTensorOp::InferDataType(user_op::InferContext *ctx) {
return DataTypeInferFn(ctx);
}

