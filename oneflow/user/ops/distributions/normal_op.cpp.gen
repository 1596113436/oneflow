#include "oneflow/core/framework/op_generated.h"

namespace oneflow {

/* static */ Maybe<void> NormalOp::InferLogicalTensorDesc(user_op::InferContext *ctx) {
      Shape* out_shape = ctx->OutputShape("out", 0);
      const Shape& shape = ctx->Attr<Shape>("shape");
      *out_shape = shape;
      return Maybe<void>::Ok();
    }

/*static*/ Maybe<void> NormalOp::InferPhysicalTensorDesc(user_op::InferContext* ctx) {return InferLogicalTensorDesc(ctx);}

/* static */ Maybe<void> NormalOp::GetSbp(user_op::SbpContext *ctx) {
      ctx->NewBuilder().Broadcast(ctx->inputs()).Broadcast(ctx->outputs()).Build();
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> NormalOp::InferNdSbp(user_op::InferNdSbpFnContext *ctx) {
      cfg::SbpParallel default_sbp;
      default_sbp.mutable_broadcast_parallel();
      return user_op::InferNdSbp4SrcOp(ctx, default_sbp);
    }

/* static */ Maybe<void> NormalOp::InferDataType(user_op::InferContext *ctx) {
      auto dtype = ctx->Attr<DataType>("dtype");
      *ctx->OutputDType("out", 0) = dtype;
      return Maybe<void>::Ok();
    }

