#include "oneflow/core/framework/op_generated.h"

namespace oneflow {

/* static */ Maybe<void> SmoothL1LossOp::InferLogicalTensorDesc(user_op::InferContext *ctx) {
return InferTensorDescFn(ctx);
}

/*static*/ Maybe<void> SmoothL1LossOp::InferPhysicalTensorDesc(user_op::InferContext* ctx) {return InferLogicalTensorDesc(ctx);}

/* static */ Maybe<void> SmoothL1LossOp::GetSbp(user_op::SbpContext *ctx) {
      const auto& input_shape = ctx->LogicalTensorDesc4InputArgNameAndIndex("input", 0).shape();
      FOR_RANGE(int64_t, i, 0, input_shape.NumAxes()) {
        ctx->NewBuilder().Split(ctx->inputs(), i).Split(user_op::OpArg("out", 0), i).Build();
      }
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> SmoothL1LossOp::ModifyInputArg(GetInputArgModifier GetInputArgModifierFn, const user_op::UserOpConfWrapper &conf) {
      user_op::InputArgModifier* target_modifier = GetInputArgModifierFn("target", 0);
      CHECK_OR_RETURN(target_modifier != nullptr);
      target_modifier->set_requires_grad(false);
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> SmoothL1LossOp::InferDataType(user_op::InferContext *ctx) {
return InferDataType(ctx);
}

/* static */ Maybe<void> SmoothL1LossGradOp::InferLogicalTensorDesc(user_op::InferContext *ctx) {
return InferGradTensorDescFn(ctx);
}

/*static*/ Maybe<void> SmoothL1LossGradOp::InferPhysicalTensorDesc(user_op::InferContext* ctx) {return InferLogicalTensorDesc(ctx);}

/* static */ Maybe<void> SmoothL1LossGradOp::GetSbp(user_op::SbpContext *ctx) {
      const auto& input_shape = ctx->LogicalTensorDesc4InputArgNameAndIndex("input", 0).shape();
      FOR_RANGE(int64_t, i, 0, input_shape.NumAxes()) {
        ctx->NewBuilder()
            .Split(user_op::OpArg("input", 0), i)
            .Split(user_op::OpArg("target", 0), i)
            .Split(user_op::OpArg("dx", 0), i)
            .Split(user_op::OpArg("dy", 0), i)
            .Build();
      }
      return Maybe<void>::Ok();
    }

/* static */ Maybe<void> SmoothL1LossGradOp::InferDataType(user_op::InferContext *ctx) {
return InferGradDataType(ctx);
}

